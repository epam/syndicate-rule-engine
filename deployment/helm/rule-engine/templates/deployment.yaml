apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rule-engine.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "rule-engine.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "rule-engine.chart" . }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.maxSurge }}
      maxUnavailable: {{ .Values.strategy.maxUnavailable }}
    {{- end}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rule-engine.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rule-engine.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "rule-engine.chart" . }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
        - name: rule-engine
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: '/caas/health/live'
              scheme: HTTP
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 40
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          {{- include "rule-engine.envs" . | nindent 10 }}
      restartPolicy: Always