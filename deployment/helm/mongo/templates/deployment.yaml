apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mongo.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "mongo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "mongo.chart" . }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.maxSurge }}
      maxUnavailable: {{ .Values.strategy.maxUnavailable }}
    {{- end}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mongo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mongo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "mongo.chart" . }}
    spec:
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: {{ include "mongo.fullname" . }}
      containers:
        - name: mongodb
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: "{{ .Values.memoryRequest }}"
            limits:
              memory: "{{ .Values.memoryLimit }}"
          livenessProbe:
            exec:
              command:
                - echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
          ports:
            - containerPort: 27017
              name: mongo-socket
              protocol: TCP
          volumeMounts:
            - name: mongo-storage
              mountPath: "/data/db"
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: password
      restartPolicy: Always
