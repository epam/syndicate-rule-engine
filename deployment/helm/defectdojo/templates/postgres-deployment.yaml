apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "defectdojo.fullname" . }}-postgres
  labels:
    app.kubernetes.io/name: {{ include "defectdojo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "defectdojo.chart" . }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "defectdojo.name" . }}-postgres
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "defectdojo.name" . }}-postgres
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "defectdojo.chart" . }}
    spec:
      containers:
        - name: postgres
          resources:
            requests:
              memory: "64Mi"
            limits:
              memory: "256Mi"
          env:
            - name: POSTGRES_DB
              value: defectdojo
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: defectdojo-secret
                  key: db-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: defectdojo-secret
                  key: db-password
          image: "{{ .Values.postgresImage }}:{{ .Values.postgresTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: dd-data-pvc
      restartPolicy: Always
      volumes:
        - name: dd-data-pvc
          persistentVolumeClaim:
            claimName: {{ include "defectdojo.fullname" . }}-data
