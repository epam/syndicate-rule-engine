apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vault.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "vault.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "vault.chart" . }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.maxSurge }}
      maxUnavailable: {{ .Values.strategy.maxUnavailable }}
    {{- end}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "vault.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "vault.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "vault.chart" . }}
    spec:
      volumes:
        - name: vault-storage
          persistentVolumeClaim:
            claimName: {{ include "vault.fullname" . }}
        - name: vault-config
          configMap:
            name: {{ include "vault.fullname" . }}
            defaultMode: 0555
      containers:
        - name: vault
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
#          readinessProbe:
#            exec:
#              command: ["/bin/sh", "-ec", "vault status -tls-skip-verify"]
#            failureThreshold: 2
#            initialDelaySeconds: 10
#            periodSeconds: 30
#            successThreshold: 1
#            timeoutSeconds: 3
#          livenessProbe:
#            httpGet:
#              path: "/v1/sys/health?standbyok=true"
#              port: 8200
#              scheme: HTTP
#            failureThreshold: 2
#            initialDelaySeconds: 30
#            periodSeconds: 30
#            successThreshold: 1
#            timeoutSeconds: 3
          volumeMounts:
            - name: vault-storage
              mountPath: "/vault/file"
            - name: vault-config
              mountPath: "/vault/init/vault-init.sh"
              subPath: vault-init.sh
            - name: vault-config
              mountPath: "/vault/config/config.hcl"
              subPath: config.hcl
          resources:
            requests:
              memory: "{{ .Values.memoryRequest }}"
            limits:
              memory: "{{ .Values.memoryLimit }}"
          ports:
            - containerPort: 8200
              name: http
              protocol: TCP
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              exec vault server -config=/vault/config/config.hcl
          env:
            - name: VAULT_ADDR
              value: http://127.0.0.1:8200
            - name: MY_VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault-secret
                  key: token
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          lifecycle:
            postStart:
              exec:
                command: ["/vault/init/vault-init.sh"]
      restartPolicy: Always
