apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "redis.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "redis.chart" . }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.maxSurge }}
      maxUnavailable: {{ .Values.strategy.maxUnavailable }}
    {{- end}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "redis.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "redis.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "redis.chart" . }}
    spec:
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: {{ include "redis.fullname" . }}
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: "{{ .Values.memoryRequest }}"
            limits:
              memory: "{{ .Values.memoryLimit }}"
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: password
                  optional: true
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              exec redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-$MONGO_PASSWORD}
          ports:
            - containerPort: 6379
              name: redis-socket
              protocol: TCP
          volumeMounts:
            - name: redis-storage
              mountPath: "/data"
      restartPolicy: Always
